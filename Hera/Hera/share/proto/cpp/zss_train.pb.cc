// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zss_train.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zss_train.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ZSS {
namespace Protocol {

namespace {

const ::google::protobuf::Descriptor* TrainControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControl_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TrainControl_State_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MessiInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessiInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessiOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessiOutput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_zss_5ftrain_2eproto() {
  protobuf_AddDesc_zss_5ftrain_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "zss_train.proto");
  GOOGLE_CHECK(file != NULL);
  TrainControl_descriptor_ = file->message_type(0);
  static const int TrainControl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControl, state_),
  };
  TrainControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControl_descriptor_,
      TrainControl::default_instance_,
      TrainControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControl));
  TrainControl_State_descriptor_ = TrainControl_descriptor_->enum_type(0);
  MessiInput_descriptor_ = file->message_type(1);
  static const int MessiInput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, enemy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, dist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, angel_),
  };
  MessiInput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessiInput_descriptor_,
      MessiInput::default_instance_,
      MessiInput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessiInput));
  MessiOutput_descriptor_ = file->message_type(2);
  static const int MessiOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_w_),
  };
  MessiOutput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessiOutput_descriptor_,
      MessiOutput::default_instance_,
      MessiOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessiOutput));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_zss_5ftrain_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControl_descriptor_, &TrainControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessiInput_descriptor_, &MessiInput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessiOutput_descriptor_, &MessiOutput::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_zss_5ftrain_2eproto() {
  delete TrainControl::default_instance_;
  delete TrainControl_reflection_;
  delete MessiInput::default_instance_;
  delete MessiInput_reflection_;
  delete MessiOutput::default_instance_;
  delete MessiOutput_reflection_;
}

void protobuf_AddDesc_zss_5ftrain_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017zss_train.proto\022\014ZSS.Protocol\"x\n\014Train"
    "Control\022/\n\005state\030\001 \001(\0162 .ZSS.Protocol.Tr"
    "ainControl.State\"7\n\005State\022\t\n\005READY\020\000\022\007\n\003"
    "RUN\020\001\022\017\n\013CALC_REWARD\020\002\022\t\n\005RESET\020\003\"8\n\nMes"
    "siInput\022\r\n\005enemy\030\001 \001(\005\022\014\n\004dist\030\002 \001(\002\022\r\n\005"
    "angel\030\003 \001(\002\":\n\013MessiOutput\022\r\n\005vel_x\030\001 \001("
    "\002\022\r\n\005vel_y\030\002 \001(\002\022\r\n\005vel_w\030\003 \001(\002", 271);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zss_train.proto", &protobuf_RegisterTypes);
  TrainControl::default_instance_ = new TrainControl();
  MessiInput::default_instance_ = new MessiInput();
  MessiOutput::default_instance_ = new MessiOutput();
  TrainControl::default_instance_->InitAsDefaultInstance();
  MessiInput::default_instance_->InitAsDefaultInstance();
  MessiOutput::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_zss_5ftrain_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_zss_5ftrain_2eproto {
  StaticDescriptorInitializer_zss_5ftrain_2eproto() {
    protobuf_AddDesc_zss_5ftrain_2eproto();
  }
} static_descriptor_initializer_zss_5ftrain_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* TrainControl_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControl_State_descriptor_;
}
bool TrainControl_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TrainControl_State TrainControl::READY;
const TrainControl_State TrainControl::RUN;
const TrainControl_State TrainControl::CALC_REWARD;
const TrainControl_State TrainControl::RESET;
const TrainControl_State TrainControl::State_MIN;
const TrainControl_State TrainControl::State_MAX;
const int TrainControl::State_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TrainControl::kStateFieldNumber;
#endif  // !_MSC_VER

TrainControl::TrainControl()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.TrainControl)
}

void TrainControl::InitAsDefaultInstance() {
}

TrainControl::TrainControl(const TrainControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.TrainControl)
}

void TrainControl::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControl::~TrainControl() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.TrainControl)
  SharedDtor();
}

void TrainControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControl_descriptor_;
}

const TrainControl& TrainControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zss_5ftrain_2eproto();
  return *default_instance_;
}

TrainControl* TrainControl::default_instance_ = NULL;

TrainControl* TrainControl::New() const {
  return new TrainControl;
}

void TrainControl::Clear() {
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.TrainControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ZSS.Protocol.TrainControl.State state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ZSS::Protocol::TrainControl_State_IsValid(value)) {
            set_state(static_cast< ::ZSS::Protocol::TrainControl_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.TrainControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.TrainControl)
  return false;
#undef DO_
}

void TrainControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.TrainControl)
  // optional .ZSS.Protocol.TrainControl.State state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.TrainControl)
}

::google::protobuf::uint8* TrainControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.TrainControl)
  // optional .ZSS.Protocol.TrainControl.State state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.TrainControl)
  return target;
}

int TrainControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ZSS.Protocol.TrainControl.State state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControl::MergeFrom(const TrainControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControl::CopyFrom(const TrainControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControl::IsInitialized() const {

  return true;
}

void TrainControl::Swap(TrainControl* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControl_descriptor_;
  metadata.reflection = TrainControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessiInput::kEnemyFieldNumber;
const int MessiInput::kDistFieldNumber;
const int MessiInput::kAngelFieldNumber;
#endif  // !_MSC_VER

MessiInput::MessiInput()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.MessiInput)
}

void MessiInput::InitAsDefaultInstance() {
}

MessiInput::MessiInput(const MessiInput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.MessiInput)
}

void MessiInput::SharedCtor() {
  _cached_size_ = 0;
  enemy_ = 0;
  dist_ = 0;
  angel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessiInput::~MessiInput() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.MessiInput)
  SharedDtor();
}

void MessiInput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessiInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessiInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessiInput_descriptor_;
}

const MessiInput& MessiInput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zss_5ftrain_2eproto();
  return *default_instance_;
}

MessiInput* MessiInput::default_instance_ = NULL;

MessiInput* MessiInput::New() const {
  return new MessiInput;
}

void MessiInput::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessiInput*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(enemy_, angel_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessiInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.MessiInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enemy = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enemy_)));
          set_has_enemy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_dist;
        break;
      }

      // optional float dist = 2;
      case 2: {
        if (tag == 21) {
         parse_dist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dist_)));
          set_has_dist();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_angel;
        break;
      }

      // optional float angel = 3;
      case 3: {
        if (tag == 29) {
         parse_angel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angel_)));
          set_has_angel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.MessiInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.MessiInput)
  return false;
#undef DO_
}

void MessiInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.MessiInput)
  // optional int32 enemy = 1;
  if (has_enemy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->enemy(), output);
  }

  // optional float dist = 2;
  if (has_dist()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->dist(), output);
  }

  // optional float angel = 3;
  if (has_angel()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.MessiInput)
}

::google::protobuf::uint8* MessiInput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.MessiInput)
  // optional int32 enemy = 1;
  if (has_enemy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->enemy(), target);
  }

  // optional float dist = 2;
  if (has_dist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->dist(), target);
  }

  // optional float angel = 3;
  if (has_angel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.MessiInput)
  return target;
}

int MessiInput::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 enemy = 1;
    if (has_enemy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enemy());
    }

    // optional float dist = 2;
    if (has_dist()) {
      total_size += 1 + 4;
    }

    // optional float angel = 3;
    if (has_angel()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessiInput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessiInput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessiInput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessiInput::MergeFrom(const MessiInput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enemy()) {
      set_enemy(from.enemy());
    }
    if (from.has_dist()) {
      set_dist(from.dist());
    }
    if (from.has_angel()) {
      set_angel(from.angel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessiInput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessiInput::CopyFrom(const MessiInput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessiInput::IsInitialized() const {

  return true;
}

void MessiInput::Swap(MessiInput* other) {
  if (other != this) {
    std::swap(enemy_, other->enemy_);
    std::swap(dist_, other->dist_);
    std::swap(angel_, other->angel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessiInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessiInput_descriptor_;
  metadata.reflection = MessiInput_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessiOutput::kVelXFieldNumber;
const int MessiOutput::kVelYFieldNumber;
const int MessiOutput::kVelWFieldNumber;
#endif  // !_MSC_VER

MessiOutput::MessiOutput()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.MessiOutput)
}

void MessiOutput::InitAsDefaultInstance() {
}

MessiOutput::MessiOutput(const MessiOutput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.MessiOutput)
}

void MessiOutput::SharedCtor() {
  _cached_size_ = 0;
  vel_x_ = 0;
  vel_y_ = 0;
  vel_w_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessiOutput::~MessiOutput() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.MessiOutput)
  SharedDtor();
}

void MessiOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessiOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessiOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessiOutput_descriptor_;
}

const MessiOutput& MessiOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zss_5ftrain_2eproto();
  return *default_instance_;
}

MessiOutput* MessiOutput::default_instance_ = NULL;

MessiOutput* MessiOutput::New() const {
  return new MessiOutput;
}

void MessiOutput::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessiOutput*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(vel_x_, vel_w_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessiOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.MessiOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float vel_x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_x_)));
          set_has_vel_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_vel_y;
        break;
      }

      // optional float vel_y = 2;
      case 2: {
        if (tag == 21) {
         parse_vel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_y_)));
          set_has_vel_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_vel_w;
        break;
      }

      // optional float vel_w = 3;
      case 3: {
        if (tag == 29) {
         parse_vel_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_w_)));
          set_has_vel_w();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.MessiOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.MessiOutput)
  return false;
#undef DO_
}

void MessiOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.MessiOutput)
  // optional float vel_x = 1;
  if (has_vel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->vel_x(), output);
  }

  // optional float vel_y = 2;
  if (has_vel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vel_y(), output);
  }

  // optional float vel_w = 3;
  if (has_vel_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->vel_w(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.MessiOutput)
}

::google::protobuf::uint8* MessiOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.MessiOutput)
  // optional float vel_x = 1;
  if (has_vel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->vel_x(), target);
  }

  // optional float vel_y = 2;
  if (has_vel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vel_y(), target);
  }

  // optional float vel_w = 3;
  if (has_vel_w()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->vel_w(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.MessiOutput)
  return target;
}

int MessiOutput::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float vel_x = 1;
    if (has_vel_x()) {
      total_size += 1 + 4;
    }

    // optional float vel_y = 2;
    if (has_vel_y()) {
      total_size += 1 + 4;
    }

    // optional float vel_w = 3;
    if (has_vel_w()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessiOutput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessiOutput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessiOutput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessiOutput::MergeFrom(const MessiOutput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vel_x()) {
      set_vel_x(from.vel_x());
    }
    if (from.has_vel_y()) {
      set_vel_y(from.vel_y());
    }
    if (from.has_vel_w()) {
      set_vel_w(from.vel_w());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessiOutput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessiOutput::CopyFrom(const MessiOutput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessiOutput::IsInitialized() const {

  return true;
}

void MessiOutput::Swap(MessiOutput* other) {
  if (other != this) {
    std::swap(vel_x_, other->vel_x_);
    std::swap(vel_y_, other->vel_y_);
    std::swap(vel_w_, other->vel_w_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessiOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessiOutput_descriptor_;
  metadata.reflection = MessiOutput_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol
}  // namespace ZSS

// @@protoc_insertion_point(global_scope)
